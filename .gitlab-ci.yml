image: alpine

variables:
  COMMIT: ${CI_COMMIT_SHA}
  TAG: ${CI_COMMIT_REF_NAME}
  REGISTRY_REPO: registry.gitlab.com/gusisoft/onelike/client/users-service
  USERS: users
  USERS_DB: users-db
  SWAGGER: users-swagger

stages:
  - tests
  - registry
  - cleanup
  - deploy

Testing:
  stage: tests
  before_script:
    - sudo git clean -ffdx
  script:
    - docker-compose -f docker-compose-dev.yml up -d --build
    - docker-compose -f docker-compose-dev.yml run users python manage.py recreate-db
    - docker-compose -f docker-compose-dev.yml run users flake8 project
    - docker-compose -f docker-compose-dev.yml run users python manage.py cov
    - docker-compose -f docker-compose-dev.yml down
    - docker image rm -f $(docker image ls -q)
  after_script:
    - sudo git clean -ffdx

Users Service:
  stage: registry
  only:
    - stage
  before_script:
    - docker login -u gitlab-ci-token -p $DOCKER_TOKEN registry.gitlab.com
    - export MAIN_REPO="https://${GITLAB_USER}:${GITLAB_PASSWORD}@gitlab.com/gusisoft/OneLike/client/users-service.git"
    - export USERS_REPO="${MAIN_REPO}#${CI_COMMIT_REF_NAME}"
  script:
    - docker build $USERS_REPO -t $USERS:$COMMIT -f Dockerfile-stage
    - docker tag $USERS:$COMMIT $REGISTRY_REPO/$USERS:$TAG
    - docker push $REGISTRY_REPO/$USERS:$TAG

Users DB:
  stage: registry
  only:
    - stage
  before_script:
    - docker login -u gitlab-ci-token -p $DOCKER_TOKEN registry.gitlab.com
    - export MAIN_REPO="https://${GITLAB_USER}:${GITLAB_PASSWORD}@gitlab.com/gusisoft/OneLike/client/users-service.git"
    - export USERS_DB_REPO="${MAIN_REPO}#${CI_COMMIT_REF_NAME}:db"
  script:
    - docker build $USERS_DB_REPO -t $USERS_DB:$COMMIT -f Dockerfile
    - docker tag $USERS_DB:$COMMIT $REGISTRY_REPO/$USERS_DB:$TAG
    - docker push $REGISTRY_REPO/$USERS_DB:$TAG

Users Swagger:
  stage: registry
  only:
    - stage
  before_script:
    - docker login -u gitlab-ci-token -p $DOCKER_TOKEN registry.gitlab.com
    - export MAIN_REPO="https://${GITLAB_USER}:${GITLAB_PASSWORD}@gitlab.com/gusisoft/OneLike/client/users-service.git"
    - export SWAGGER_REPO="${MAIN_REPO}#${CI_COMMIT_REF_NAME}:swagger"
  script:
    - docker build $SWAGGER_REPO -t $SWAGGER:$COMMIT -f Dockerfile
    - docker tag $SWAGGER:$COMMIT $REGISTRY_REPO/$SWAGGER:$TAG
    - docker push $REGISTRY_REPO/$SWAGGER:$TAG

Cleaning:
  stage: cleanup
  only:
    - stage
  script:
    - docker image rm -f $(docker image ls -q)

Stage:
  stage: deploy
  environment:
    name: stage
    url: http://stage.onelike.gusisoft.cl
  only:
    - stage
  before_script:
    - rm -rf ~/.ssh
    - mkdir -p ~/.ssh
    - echo -e "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - bash ./stage-deploy.sh
