image: alpine

variables:
  DOCKER_TOKEN: 4JbtWjshp1KHwdPzb2CK
  GITLAB_USER: gitlab+deploy-token-25488
  GITLAB_PASSWORD: zkcGJFdvCN6KCfmWtnAU

  COMMIT: ${CI_COMMIT_SHA}
  TAG: ${CI_COMMIT_REF_NAME}
  MAIN_REPO: https://gitlab+deploy-token-25488:zkcGJFdvCN6KCfmWtnAU@gitlab.com/gusisoft/OneLike/client/users-service.git
  REGISTRY_REPO: registry.gitlab.com/gusisoft/onelike/client/users-service
  USERS: users
  USERS_REPO: ${MAIN_REPO}#${CI_COMMIT_REF_NAME}
  USERS_DB: users-db
  USERS_DB_REPO: ${MAIN_REPO}#${CI_COMMIT_REF_NAME}:db
  SWAGGER: swagger
  SWAGGER_REPO: ${MAIN_REPO}#${CI_COMMIT_REF_NAME}:swagger


stages:
#  - unit_test
  - registry
  - cleanup

#before_script:
#  - apk update
#  - apk upgrade
#  - apk add python python-dev py-pip build-base
#  - pip install docker-compose

#unit_test:
#  stage: unit_test
#  script:
#    - docker-compose -f docker-compose-dev.yml up -d --build
#    - docker-compose -f docker-compose-dev.yml run users python manage.py recreate-db
#    - docker-compose -f docker-compose-dev.yml run users flake8 project
#    - docker-compose -f docker-compose-dev.yml run users python manage.py cov

registry_user_devel:
  stage: registry
  script:
    - docker login -u gitlab-ci-token -p $DOCKER_TOKEN registry.gitlab.com

    - docker build $USERS_REPO -t $USERS:$COMMIT -f Dockerfile-dev
    - docker tag $USERS:$COMMIT $REGISTRY_REPO/$USERS:$TAG
    - docker push $REGISTRY_REPO/$USERS:$TAG

registry_user_db_devel:
  stage: registry
  script:
    - docker login -u gitlab-ci-token -p $DOCKER_TOKEN registry.gitlab.com

    - docker build $USERS_DB_REPO -t $USERS_DB:$COMMIT -f Dockerfile
    - docker tag $USERS_DB:$COMMIT $REGISTRY_REPO/$USERS_DB:$TAG
    - docker push $REGISTRY_REPO/$USERS_DB:$TAG

registry_swagger_devel:
  stage: registry
  script:
    - docker login -u gitlab-ci-token -p $DOCKER_TOKEN registry.gitlab.com

    - docker build $SWAGGER_REPO -t $SWAGGER:$COMMIT -f Dockerfile
    - docker tag $SWAGGER:$COMMIT $REGISTRY_REPO/$SWAGGER:$TAG
    - docker push $REGISTRY_REPO/$SWAGGER:$TAG

cleanup:
  stage: cleanup
  script:
    - docker image rm -f $(docker image ls -q)
    - docker volume rm -f $(docker volume ls -q)
