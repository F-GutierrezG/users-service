image: alpine

variables:
  COMMIT: ${CI_COMMIT_SHA}
  TAG: ${CI_COMMIT_REF_NAME}
  REGISTRY_REPO: registry.gitlab.com/gusisoft/onelike/client/users-service
  USERS: users
  USERS_DB: users-db
  SWAGGER: swagger

stages:
#  - tests
#  - registry
#  - cleanup
  - devel

#Testing:
#  stage: tests
#  script:
#    - docker-compose -f docker-compose-dev.yml up -d --build
#    - docker-compose -f docker-compose-dev.yml run users python manage.py recreate-db
#    - docker-compose -f docker-compose-dev.yml run users flake8 project
#    - docker-compose -f docker-compose-dev.yml run users python manage.py cov
#    - docker-compose -f docker-compose-dev.yml down
#    - docker image rm -f $(docker image ls -q)
#
#Users Service:
#  stage: registry
#  before_script:
#    - docker login -u gitlab-ci-token -p $DOCKER_TOKEN registry.gitlab.com
#    - export MAIN_REPO="https://${GITLAB_USER}:${GITLAB_PASSWORD}@gitlab.com/gusisoft/OneLike/client/users-service.git"
#    - export USERS_REPO="${MAIN_REPO}#${CI_COMMIT_REF_NAME}"
#  script:
#    - docker build $USERS_REPO -t $USERS:$COMMIT -f Dockerfile-dev
#    - docker tag $USERS:$COMMIT $REGISTRY_REPO/$USERS:$TAG
#    - docker push $REGISTRY_REPO/$USERS:$TAG
#
#Users DB:
#  stage: registry
#  before_script:
#    - docker login -u gitlab-ci-token -p $DOCKER_TOKEN registry.gitlab.com
#    - export MAIN_REPO="https://${GITLAB_USER}:${GITLAB_PASSWORD}@gitlab.com/gusisoft/OneLike/client/users-service.git"
#    - export USERS_DB_REPO="${MAIN_REPO}#${CI_COMMIT_REF_NAME}:db"
#  script:
#    - docker build $USERS_DB_REPO -t $USERS_DB:$COMMIT -f Dockerfile
#    - docker tag $USERS_DB:$COMMIT $REGISTRY_REPO/$USERS_DB:$TAG
#    - docker push $REGISTRY_REPO/$USERS_DB:$TAG
#
#Users Swagger:
#  stage: registry
#  before_script:
#    - docker login -u gitlab-ci-token -p $DOCKER_TOKEN registry.gitlab.com
#    - export MAIN_REPO="https://${GITLAB_USER}:${GITLAB_PASSWORD}@gitlab.com/gusisoft/OneLike/client/users-service.git"
#    - export SWAGGER_REPO="${MAIN_REPO}#${CI_COMMIT_REF_NAME}:swagger"
#  script:
#    - docker build $SWAGGER_REPO -t $SWAGGER:$COMMIT -f Dockerfile
#    - docker tag $SWAGGER:$COMMIT $REGISTRY_REPO/$SWAGGER:$TAG
#    - docker push $REGISTRY_REPO/$SWAGGER:$TAG
#
#Cleaning:
#  stage: cleanup
#  script:
#    - docker image rm -f $(docker image ls -q)
#
Devel:
  stage: devel
  before_script:
    - mkdir -p ~/.ssh
    - echo -e "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - bash ./devel-deploy.sh
